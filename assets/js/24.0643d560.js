(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{396:function(t,r,s){"use strict";s.r(r);var i=s(2),n=Object(i.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"什么是spring-spring的来源"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是spring-spring的来源"}},[t._v("#")]),t._v(" 什么是spring？spring的来源？")]),t._v(" "),r("blockquote",[r("p",[t._v("首先了解spring之前我们要知道一个更前的概念J2EE，J2EE是一套企业级分布式应用的开发规范亦或者说是标准，它是由SUN公司领导、各厂家共同制定的工业标准，\n也就是说这个东西是公认、遵守的开发标准，统一标准这个概念我想大家读过历史都知道，这个方向肯定是没问题的，但是早期的Java EE（J2EE的另一个称呼）应用开发却是非常痛苦的，问题出在开发难度高、开发效率低上，\n为了解决这些问题，当时的人们应该做了挺多尝试的，现在看来spring是最成功的，spring就是为了简化开发难度、提高开发效率诞生的一个建立在J2EE开发规范标准上帮助开发者快速够精和开发Java EE\n应用的框架，这也使得J2EE开发规范标准能够真正的统一开发环境，并且随着spring的发展推广，spring渐渐从J2EE规范的遵守者变成了类似于无冕之王的规范制定者，因此你看到市面上只要是Java开发，spring\n家族就是绕不开的一个东西，并且都是基于它做开发，因为它是统一、公认的企业级应用开发标准框架。")])]),t._v(" "),r("h2",{attrs:{id:"spring-的特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring-的特性"}},[t._v("#")]),t._v(" spring 的特性")]),t._v(" "),r("ol",[r("li",[t._v("非侵入式：基于spring开发的应用中的对象可以不依赖于spring的api。")]),t._v(" "),r("li",[t._v("控制反转（IOC）：将对象的创建由个人交给spring框架。")]),t._v(" "),r("li",[t._v("依赖注入（DI）：spring框架通过IOC机制创建了对象之后，将对象赋予指定变量。")]),t._v(" "),r("li",[t._v("面向切面变成（AOP）：支持切面编程，例如日志统一管理。")]),t._v(" "),r("li",[t._v("容器化：spring可以看做一个容器，管理着应用对象的生命周期。")]),t._v(" "),r("li",[t._v("组件化：支持通过组件的方式，组合成一个复杂的应用。")]),t._v(" "),r("li",[t._v("一站式：在IOC和AOP的基础上可以整合各种优秀的企业应用开源框架，本身也提供了对应需求框架例如：springMVC、spring JDBC。")])]),t._v(" "),r("h2",{attrs:{id:"spring的组成"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring的组成"}},[t._v("#")]),t._v(" spring的组成")]),t._v(" "),r("blockquote",[r("p",[t._v("Spring框架由组织成20个模块的特性组成。这些模块分为核心容器、数据访问/集成、Web、AOP(面向方面的编程)、检测、消息传递和测试，\n以下是spring框架的所有模块，当然得注意spring5.0之后去掉和加入了一些模块，不过大体而言目标是满足企业应用得一切开发需求，可以按需进行组合使用")])]),t._v(" "),r("p",{attrs:{align:"center"}},[r("img",{staticStyle:{cursor:"zoom-in"},attrs:{src:"/images/spring/spring.jpg"}})]),t._v(" "),r("h3",{attrs:{id:"_1-core-container-spring的核心容器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-core-container-spring的核心容器"}},[t._v("#")]),t._v(" 1. Core Container（Spring的核心容器）")]),t._v(" "),r("blockquote",[r("p",[t._v("Spring 的核心容器是其他模块建立的基础，由 Beans 模块、Core 核心模块、Context 上下文模块和 SpEL 表达式语言模块组成，\nAOP、Web 等上层的功能如果没有核心容器的模块是无法使用的。")])]),t._v(" "),r("ol",[r("li",[t._v("Beans 模块：提供了框架的基础部分，包括控制反转和依赖注入。")]),t._v(" "),r("li",[t._v("Core 核心模块：封装了 Spring 框架的底层部分，包括资源访问、类型转换及一些常用工具类。")]),t._v(" "),r("li",[t._v("Context 上下文模块：建立在 Core 和 Beans 模块的基础之上，集成 Beans 模块功能并添加资源绑定、数据验证、国际化、Java EE 支持、容器生命周期、事件传播等功能。\nApplicationContext 接口是上下文模块的焦点。")]),t._v(" "),r("li",[t._v("SpEL 表达式语言模块：提供了强大的表达式语言支持，支持访问和修改属性值，方法调用，支持访问及修改数组、容器和索引器，命名变量，支持算数和逻辑运算，支持从 Spring 容器获取 Bean，\n它也支持列表投影、选择和一般的列表聚合等。")])]),t._v(" "),r("p",{attrs:{align:"center"}},[r("img",{staticStyle:{cursor:"zoom-in"},attrs:{src:"/images/spring/spring-container.jpg"}})]),t._v(" "),r("h3",{attrs:{id:"_2-aop-and-instrumentation-and-messaging-and-jcl-中间层支持"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-aop-and-instrumentation-and-messaging-and-jcl-中间层支持"}},[t._v("#")]),t._v(" 2. AOP and Instrumentation and messaging and jcl (中间层支持)")]),t._v(" "),r("blockquote",[r("p",[t._v("在spring container 核心之前是：AOP、Aspects、Instrumentation、messageing等模块")])]),t._v(" "),r("ol",[r("li",[t._v("AOP 模块: 提供面向切面编程的实现和支持，提供比如日志记录、权限控制、性能统计等通用功能和业务逻辑分离的技术")]),t._v(" "),r("li",[t._v("Aspects 模块：提供与 AspectJ 的集成，是一个功能强大且成熟的面向切面编程（AOP）框架。")]),t._v(" "),r("li",[t._v("Instrumentation 模块：提供类检测支持和类加载器在某些应用程序服务器中使用的实现。")]),t._v(" "),r("li",[t._v("messaging 模块：Spring 4.0 以后新增了消息（Spring-messaging）模块，该模块提供了对消息传递体系结构和协议的支持。")]),t._v(" "),r("li",[t._v("jcl 模块： Spring 5.x中新增了日志框架集成的模块。")])]),t._v(" "),r("p",{attrs:{align:"center"}},[r("img",{staticStyle:{cursor:"zoom-in"},attrs:{src:"/images/spring/spring-aop-instrumentation.jpg"}})]),t._v(" "),r("h3",{attrs:{id:"_3-data-access-integration-数据访问-集成"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-data-access-integration-数据访问-集成"}},[t._v("#")]),t._v(" 3. Data Access/Integration（数据访问/集成）")]),t._v(" "),r("blockquote",[r("p",[t._v("数据访问/集成层包括 JDBC、ORM、OXM、JMS 和 Transactions 模块")])]),t._v(" "),r("ol",[r("li",[t._v("JDBC 模块：提供了一个 JDBC 的样例模板，使用这些模板能消除传统冗长的 JDBC 编码还有必须的事务控制，而且能享受到 Spring 管理事务的好处。")]),t._v(" "),r("li",[t._v("ORM 模块：提供与流行的“对象-关系”映射框架无缝集成的 API，包括 JPA、JDO、Hibernate 和 MyBatis 等。而且还可以使用 Spring 事务管理，无需额外控制事务。")]),t._v(" "),r("li",[t._v("OXM 模块：提供了一个支持 Object /XML 映射的抽象层实现，如 JAXB、Castor、XMLBeans、JiBX 和 XStream。将 Java 对象映射成 XML 数据，或者将XML 数据映射成 Java 对象。")]),t._v(" "),r("li",[t._v("JMS 模块：指 Java 消息服务，提供一套 “消息生产者、消息消费者”模板用于更加简单的使用 JMS，JMS 用于在两个应用程序之间，或分布式系统中发送消息，进行异步通信。")]),t._v(" "),r("li",[t._v("Transactions 事务模块：支持编程和声明式事务管理。")])]),t._v(" "),r("p",{attrs:{align:"center"}},[r("img",{staticStyle:{cursor:"zoom-in"},attrs:{src:"/images/spring/spring-dataAccess-integration.jpg"}})]),t._v(" "),r("h3",{attrs:{id:"_4-web-web开发支持"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-web-web开发支持"}},[t._v("#")]),t._v(" 4. Web （web开发支持）")]),t._v(" "),r("blockquote",[r("p",[t._v("Spring 的 Web 层包括 Web、Servlet、WebSocket 和 Webflux 组件。")])]),t._v(" "),r("ol",[r("li",[t._v("Web 模块：提供了基本的 Web 开发集成特性，例如多文件上传功能、使用的 Servlet 监听器的 IOC 容器初始化以及 Web 应用上下文。")]),t._v(" "),r("li",[t._v("Servlet 模块：提供了一个 Spring MVC Web 框架实现。Spring MVC 框架提供了基于注解的请求资源注入、更简单的数据绑定、数据验证等及一套非常易用的 JSP 标签，\n完全无缝与 Spring其他技术协作。")]),t._v(" "),r("li",[t._v("WebSocket 模块：提供了简单的接口，用户只要实现响应的接口就可以快速的搭建 WebSocket Server，从而实现双向通讯。")]),t._v(" "),r("li",[t._v("Webflux 模块： Spring WebFlux 是 Spring Framework 5.x中引入的新的响应式web框架。与Spring MVC不同，它不需要Servlet API，\n是完全异步且非阻塞的，并且通过Reactor项目实现了Reactive Streams规范。Spring WebFlux 用于创建基于事件循环执行模型的完全异步且非阻塞的应用程序。\n此外Spring4.x中还有Portlet 模块，在Spring 5.x中已经移除。")]),t._v(" "),r("li",[t._v("Portlet 模块：提供了在 Portlet 环境中使用 MVC 实现，类似 Web-Servlet 模块的功能。")])]),t._v(" "),r("p",{attrs:{align:"center"}},[r("img",{staticStyle:{cursor:"zoom-in"},attrs:{src:"/images/spring/spring-web.jpg"}})]),t._v(" "),r("h3",{attrs:{id:"_5-test-功能测试需求"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-test-功能测试需求"}},[t._v("#")]),t._v(" 5. Test （功能测试需求）")]),t._v(" "),r("blockquote",[r("p",[t._v("Test 模块：Spring 支持 Junit 和 TestNG 测试框架，而且还额外提供了一些基于 Spring 的测试功能，比如在测试 Web 框架时，模拟 Http 请求的功能。")])]),t._v(" "),r("p",{attrs:{align:"center"}},[r("img",{staticStyle:{cursor:"zoom-in"},attrs:{src:"/images/spring/spring-test.jpg"}})]),t._v(" "),r("h3",{attrs:{id:"_6-spring版本历史-结合springboot"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-spring版本历史-结合springboot"}},[t._v("#")]),t._v(" 6. spring版本历史，结合springboot")]),t._v(" "),r("p",{attrs:{align:"center"}},[r("img",{staticStyle:{cursor:"zoom-in"},attrs:{src:"/images/spring/spring-history.jpg"}})]),t._v(" "),r("h2",{attrs:{id:"参考链接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),r("ol",[r("li",[t._v("https://pdai.tech/md/spring/spring-x-framework-introduce.html")]),t._v(" "),r("li",[t._v("https://baike.baidu.com/item/Java%20EE/2180381?fr=aladdin")]),t._v(" "),r("li",[t._v("https://docs.spring.io/spring-framework/docs/5.0.0.M4/spring-framework-reference/pdf/spring-framework-reference.pdf")])])])}),[],!1,null,null,null);r.default=n.exports}}]);