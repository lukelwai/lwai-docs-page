(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{397:function(t,s,l){"use strict";l.r(s);var e=l(2),r=Object(e.a)({},(function(){var t=this._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("ol",[t("li",[this._v("底层的实现原理不一样，过滤器底层是通过回调函数实现的，拦截器则是通过Java的反射机制动态代理实现的")]),this._v(" "),t("li",[this._v("使用范围不同，过滤器是依赖于servlet容器（tomcat）的属于servlet规范的一部分，而拦截器是独立的spring提供的组件可以在任何地方使用")]),this._v(" "),t("li",[this._v("触发时机不同，过滤器是请求进入容器后，但是进入servlet之前做预处理，servlet处理完之后请求结束，\n拦截器是请求进入servlet在controller之前做预处理，controller渲染了对应的视图之后请求结束")]),this._v(" "),t("li",[this._v("请求拦截范围不同，过滤器对所有进入容器的请求起作用，拦截器只针对进入controller和访问static目录下资源的请求有效")])])])}),[],!1,null,null,null);s.default=r.exports}}]);