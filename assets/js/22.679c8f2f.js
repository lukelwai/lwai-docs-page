(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{394:function(l,v,_){"use strict";_.r(v);var i=_(2),t=Object(i.a)({},(function(){var l=this,v=l._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[v("h1",{attrs:{id:"七个设计原则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#七个设计原则"}},[l._v("#")]),l._v(" 七个设计原则")]),l._v(" "),v("ol",[v("li",[l._v("单一职责原则\n"),v("ul",[v("li",[l._v("一个类只承担一个职责，进行职责业务功能的解耦")])])]),l._v(" "),v("li",[l._v("里氏替换原则\n"),v("ul",[v("li",[l._v("也是继承的原则，指的是每个父类对象的引用可以，直接使用子类对象进行替换，不影响到代码使用")])])]),l._v(" "),v("li",[l._v("依赖倒置原则\n"),v("ul",[v("li",[l._v("针对接口编程，而不是针对实现编程")]),l._v(" "),v("li",[l._v("抽象不应该依赖于细节，细节应该依赖于抽象")])])]),l._v(" "),v("li",[l._v("开闭原则\n"),v("ul",[v("li",[l._v("好的代码结构，应该符合这个原则，比如一个代码模块，应该对修改封闭，对扩展开放")])])]),l._v(" "),v("li",[l._v("接口隔离原则\n"),v("ul",[v("li",[l._v("提供独立内聚的接口，而不是提供庞大复杂的接口")])])]),l._v(" "),v("li",[l._v("组合复用原则\n"),v("ul",[v("li",[l._v("尽量组合达到代码复用的目的而不是使用继承达到代码复用的目的")])])]),l._v(" "),v("li",[l._v("迪米特法则\n"),v("ul",[v("li",[l._v("最少知识原则，也是高内聚、低耦合原则")])])])])])}),[],!1,null,null,null);v.default=t.exports}}]);